import os
import json
import flask
import gspread
from flask import Flask, request
from oauth2client.service_account import ServiceAccountCredentials
import telegram
from telegram import ReplyKeyboardMarkup

# === –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===
TG_TOKEN = '7934951805:AAH-Uw-QyYKdU9WMpOa1tAYKiF29X7Z0gIg'
SHEET_ID = '1AbC044-YbcX-USxpdPHt-uL4S9IDeVnCfqWlMZnnJ8k'
SHEET_NAME = '–û—Å—Ç–∞—Ç–∫–∏'

# === Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ ===
app = Flask(__name__)
bot = telegram.Bot(token=TG_TOKEN)

# === Google Sheets –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ ===
scope = ['https://spreadsheets.google.com/feeds', 'https://www.googleapis.com/auth/drive']
with open('creds.json') as f:
    creds_json = json.load(f)
creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_json, scope)
client = gspread.authorize(creds)
sheet = client.open_by_key(SHEET_ID).worksheet(SHEET_NAME)

# === –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è Render (–ø—Ä–æ–≤–µ—Ä–∫–∞) ===
@app.route('/')
def index():
    return 'Bot is alive!'

# === Webhook –æ–±—Ä–∞–±–æ—Ç–∫–∞ ===
@app.route('/' + TG_TOKEN, methods=['POST'])
def webhook():
    update = telegram.Update.de_json(request.get_json(force=True), bot)
    message = update.message
    chat_id = message.chat.id
    text = message.text

    if text == '/start':
        send_main_menu(chat_id)
    elif text == 'üîç –ü–æ–∏—Å–∫ –ø–æ —Å–∫–ª–∞–¥—É':
        bot.send_message(chat_id, 'üîé –í–≤–µ–¥–∏—Ç–µ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:')
    elif text == 'üîé –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫':
        bot.send_message(chat_id, 'üîé –í–≤–µ–¥–∏—Ç–µ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞:')
    elif text == '‚óÄ –ù–∞–∑–∞–¥':
        send_main_menu(chat_id)
    elif text == '‚ùå –æ—Ç–º–µ–Ω–∞':
        bot.send_message(chat_id, '‚ùå –î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.')
        send_main_menu(chat_id)
    else:
        result = search_stock(text)
        bot.send_message(chat_id, result, reply_markup=get_inline_keyboard())

    return 'ok'

# === –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é ===
def send_main_menu(chat_id):
    keyboard = ReplyKeyboardMarkup(
        keyboard=[
            ['üîç –ü–æ–∏—Å–∫ –ø–æ —Å–∫–ª–∞–¥—É'],
            ['üóÇ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª 1'],
            ['üìÑ –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ä–∞–∑–¥–µ–ª 2']
        ],
        resize_keyboard=True
    )
    bot.send_message(chat_id, 'üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ. –í—ã–±–µ—Ä–∏, —á—Ç–æ –Ω—É–∂–Ω–æ:', reply_markup=keyboard)

# === –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø–æ—Å–ª–µ –ø–æ–∏—Å–∫–∞ ===
def get_inline_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            ['üîé –Ω–æ–≤—ã–π –ø–æ–∏—Å–∫'],
            ['‚óÄ –ù–∞–∑–∞–¥', '‚ùå –æ—Ç–º–µ–Ω–∞']
        ],
        resize_keyboard=True
    )

# === –ü–æ–∏—Å–∫ –ø–æ —Ç–∞–±–ª–∏—Ü–µ ===
def search_stock(query):
    if not query:
        return '‚ö†Ô∏è –£–∫–∞–∂–∏—Ç–µ —á–∞—Å—Ç—å –Ω–∞–∑–≤–∞–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.'
    try:
        data = sheet.get_all_values()[5:]  # –°—á–∏—Ç—ã–≤–∞–µ–º —Å 6 —Å—Ç—Ä–æ–∫–∏
        results = []
        for row in data:
            name = row[0].strip().lower()
            total = row[2] if len(row) > 2 else '0'
            reserve = row[3] if len(row) > 3 else '0'
            available = row[4] if len(row) > 4 else '0'

            if query.lower() in name and available and int(available) > 0:
                results.append(f"üì¶ {row[0]}\n‚Äî –í—Å–µ–≥–æ: {total}\n‚Äî –†–µ–∑–µ—Ä–≤: {reserve}\n‚Äî –î–æ—Å—Ç—É–ø–Ω–æ: {available}")
        if not results:
            return f'‚ùå –ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –ø–æ –∑–∞–ø—Ä–æ—Å—É: "{query}"'
        return "üîé –ù–∞–π–¥–µ–Ω–æ:\n\n" + "\n\n".join(results[:10])
    except Exception as e:
        return f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ: {e}'

# === –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ (–ª–æ–∫–∞–ª—å–Ω–æ) ===
if __name__ == '__main__':
    app.run(port=8080)
